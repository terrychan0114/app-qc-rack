# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server.models.base_model_ import Model
from server import util


class StatusInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, seq_number: float=None, part_number: str=None, description: str=None, quantity: float=None, wo_number: str=None, process: str=None, entry_date: str=None, priority: float=None, inspector: str=None, time_spent: str=None, complete_time: str=None, comment: str=None, quantity_a_r: str=None, current_status: str=None, final_status: str=None):  # noqa: E501
        """StatusInfo - a model defined in Swagger

        :param seq_number: The seq_number of this StatusInfo.  # noqa: E501
        :type seq_number: float
        :param part_number: The part_number of this StatusInfo.  # noqa: E501
        :type part_number: str
        :param description: The description of this StatusInfo.  # noqa: E501
        :type description: str
        :param quantity: The quantity of this StatusInfo.  # noqa: E501
        :type quantity: float
        :param wo_number: The wo_number of this StatusInfo.  # noqa: E501
        :type wo_number: str
        :param process: The process of this StatusInfo.  # noqa: E501
        :type process: str
        :param entry_date: The entry_date of this StatusInfo.  # noqa: E501
        :type entry_date: str
        :param priority: The priority of this StatusInfo.  # noqa: E501
        :type priority: float
        :param inspector: The inspector of this StatusInfo.  # noqa: E501
        :type inspector: str
        :param time_spent: The time_spent of this StatusInfo.  # noqa: E501
        :type time_spent: str
        :param complete_time: The complete_time of this StatusInfo.  # noqa: E501
        :type complete_time: str
        :param comment: The comment of this StatusInfo.  # noqa: E501
        :type comment: str
        :param quantity_a_r: The quantity_a_r of this StatusInfo.  # noqa: E501
        :type quantity_a_r: str
        :param current_status: The current_status of this StatusInfo.  # noqa: E501
        :type current_status: str
        :param final_status: The final_status of this StatusInfo.  # noqa: E501
        :type final_status: str
        """
        self.swagger_types = {
            'seq_number': float,
            'part_number': str,
            'description': str,
            'quantity': float,
            'wo_number': str,
            'process': str,
            'entry_date': str,
            'priority': float,
            'inspector': str,
            'time_spent': str,
            'complete_time': str,
            'comment': str,
            'quantity_a_r': str,
            'current_status': str,
            'final_status': str
        }

        self.attribute_map = {
            'seq_number': 'seq_number',
            'part_number': 'part_number',
            'description': 'description',
            'quantity': 'quantity',
            'wo_number': 'wo_number',
            'process': 'process',
            'entry_date': 'entry_date',
            'priority': 'priority',
            'inspector': 'inspector',
            'time_spent': 'time_spent',
            'complete_time': 'complete_time',
            'comment': 'comment',
            'quantity_a_r': 'quantity_a_r',
            'current_status': 'current_status',
            'final_status': 'final_status'
        }
        self._seq_number = seq_number
        self._part_number = part_number
        self._description = description
        self._quantity = quantity
        self._wo_number = wo_number
        self._process = process
        self._entry_date = entry_date
        self._priority = priority
        self._inspector = inspector
        self._time_spent = time_spent
        self._complete_time = complete_time
        self._comment = comment
        self._quantity_a_r = quantity_a_r
        self._current_status = current_status
        self._final_status = final_status

    @classmethod
    def from_dict(cls, dikt) -> 'StatusInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The statusInfo of this StatusInfo.  # noqa: E501
        :rtype: StatusInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def seq_number(self) -> float:
        """Gets the seq_number of this StatusInfo.


        :return: The seq_number of this StatusInfo.
        :rtype: float
        """
        return self._seq_number

    @seq_number.setter
    def seq_number(self, seq_number: float):
        """Sets the seq_number of this StatusInfo.


        :param seq_number: The seq_number of this StatusInfo.
        :type seq_number: float
        """

        self._seq_number = seq_number

    @property
    def part_number(self) -> str:
        """Gets the part_number of this StatusInfo.


        :return: The part_number of this StatusInfo.
        :rtype: str
        """
        return self._part_number

    @part_number.setter
    def part_number(self, part_number: str):
        """Sets the part_number of this StatusInfo.


        :param part_number: The part_number of this StatusInfo.
        :type part_number: str
        """

        self._part_number = part_number

    @property
    def description(self) -> str:
        """Gets the description of this StatusInfo.


        :return: The description of this StatusInfo.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this StatusInfo.


        :param description: The description of this StatusInfo.
        :type description: str
        """

        self._description = description

    @property
    def quantity(self) -> float:
        """Gets the quantity of this StatusInfo.


        :return: The quantity of this StatusInfo.
        :rtype: float
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity: float):
        """Sets the quantity of this StatusInfo.


        :param quantity: The quantity of this StatusInfo.
        :type quantity: float
        """

        self._quantity = quantity

    @property
    def wo_number(self) -> str:
        """Gets the wo_number of this StatusInfo.


        :return: The wo_number of this StatusInfo.
        :rtype: str
        """
        return self._wo_number

    @wo_number.setter
    def wo_number(self, wo_number: str):
        """Sets the wo_number of this StatusInfo.


        :param wo_number: The wo_number of this StatusInfo.
        :type wo_number: str
        """

        self._wo_number = wo_number

    @property
    def process(self) -> str:
        """Gets the process of this StatusInfo.


        :return: The process of this StatusInfo.
        :rtype: str
        """
        return self._process

    @process.setter
    def process(self, process: str):
        """Sets the process of this StatusInfo.


        :param process: The process of this StatusInfo.
        :type process: str
        """

        self._process = process

    @property
    def entry_date(self) -> str:
        """Gets the entry_date of this StatusInfo.


        :return: The entry_date of this StatusInfo.
        :rtype: str
        """
        return self._entry_date

    @entry_date.setter
    def entry_date(self, entry_date: str):
        """Sets the entry_date of this StatusInfo.


        :param entry_date: The entry_date of this StatusInfo.
        :type entry_date: str
        """

        self._entry_date = entry_date

    @property
    def priority(self) -> float:
        """Gets the priority of this StatusInfo.


        :return: The priority of this StatusInfo.
        :rtype: float
        """
        return self._priority

    @priority.setter
    def priority(self, priority: float):
        """Sets the priority of this StatusInfo.


        :param priority: The priority of this StatusInfo.
        :type priority: float
        """

        self._priority = priority

    @property
    def inspector(self) -> str:
        """Gets the inspector of this StatusInfo.


        :return: The inspector of this StatusInfo.
        :rtype: str
        """
        return self._inspector

    @inspector.setter
    def inspector(self, inspector: str):
        """Sets the inspector of this StatusInfo.


        :param inspector: The inspector of this StatusInfo.
        :type inspector: str
        """

        self._inspector = inspector

    @property
    def time_spent(self) -> str:
        """Gets the time_spent of this StatusInfo.


        :return: The time_spent of this StatusInfo.
        :rtype: str
        """
        return self._time_spent

    @time_spent.setter
    def time_spent(self, time_spent: str):
        """Sets the time_spent of this StatusInfo.


        :param time_spent: The time_spent of this StatusInfo.
        :type time_spent: str
        """

        self._time_spent = time_spent

    @property
    def complete_time(self) -> str:
        """Gets the complete_time of this StatusInfo.


        :return: The complete_time of this StatusInfo.
        :rtype: str
        """
        return self._complete_time

    @complete_time.setter
    def complete_time(self, complete_time: str):
        """Sets the complete_time of this StatusInfo.


        :param complete_time: The complete_time of this StatusInfo.
        :type complete_time: str
        """

        self._complete_time = complete_time

    @property
    def comment(self) -> str:
        """Gets the comment of this StatusInfo.


        :return: The comment of this StatusInfo.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment: str):
        """Sets the comment of this StatusInfo.


        :param comment: The comment of this StatusInfo.
        :type comment: str
        """

        self._comment = comment

    @property
    def quantity_a_r(self) -> str:
        """Gets the quantity_a_r of this StatusInfo.


        :return: The quantity_a_r of this StatusInfo.
        :rtype: str
        """
        return self._quantity_a_r

    @quantity_a_r.setter
    def quantity_a_r(self, quantity_a_r: str):
        """Sets the quantity_a_r of this StatusInfo.


        :param quantity_a_r: The quantity_a_r of this StatusInfo.
        :type quantity_a_r: str
        """

        self._quantity_a_r = quantity_a_r

    @property
    def current_status(self) -> str:
        """Gets the current_status of this StatusInfo.


        :return: The current_status of this StatusInfo.
        :rtype: str
        """
        return self._current_status

    @current_status.setter
    def current_status(self, current_status: str):
        """Sets the current_status of this StatusInfo.


        :param current_status: The current_status of this StatusInfo.
        :type current_status: str
        """

        self._current_status = current_status

    @property
    def final_status(self) -> str:
        """Gets the final_status of this StatusInfo.


        :return: The final_status of this StatusInfo.
        :rtype: str
        """
        return self._final_status

    @final_status.setter
    def final_status(self, final_status: str):
        """Sets the final_status of this StatusInfo.


        :param final_status: The final_status of this StatusInfo.
        :type final_status: str
        """

        self._final_status = final_status
